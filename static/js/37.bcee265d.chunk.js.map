{"version":3,"sources":["artworks/A003.js"],"names":["Artwork","props","canvasWidth","window","innerWidth","canvasHeight","innerHeight","setup","p5","canvasParentRef","createCanvas","parent","mondrian","x","y","x2","y2","N","col","fill","floor","random","length","strokeWeight","rect","i","j","draw","keyPressed","keyCode","saveCanvas"],"mappings":"oHAAA,6CA+CeA,UA5CC,SAACC,GACf,IAAMC,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,YAuC5B,OAAO,kBAAC,IAAD,CAAQC,MAdD,SAACC,EAAIC,GACjBD,EAAGE,aAAaR,EAAaG,GAAcM,OAAOF,GAvBpD,SAASG,EAASJ,EAAIK,EAAGC,EAAGC,EAAIC,EAAIC,GAClC,GAAU,IAANA,EAAS,CAEX,IACIC,EAAM,CAAC,UAAW,UAAW,UAAW,WAE5CV,EAAGW,KAAKD,EAAIV,EAAGY,MAAMZ,EAAGa,OAAOH,EAAII,WACnCd,EAAGe,aAJgB,GAKnBf,EAAGgB,KAAKX,EAAGC,EAAGC,EAAKF,EALA,EAKkBG,EAAKF,EALvB,OAMd,CAEL,IAAIW,EAAIjB,EAAGY,MAAMZ,EAAGa,OAAOR,EAAGE,IAC1BW,EAAIlB,EAAGY,MAAMZ,EAAGa,OAAOP,EAAGE,IAG9BJ,EAASJ,EAAIK,EAAGC,EAAGW,EAAGC,EAAGT,EAAI,GAC7BL,EAASJ,EAAIiB,EAAGX,EAAGC,EAAIW,EAAGT,EAAI,GAC9BL,EAASJ,EAAIK,EAAGa,EAAGD,EAAGT,EAAIC,EAAI,GAC9BL,EAASJ,EAAIiB,EAAGC,EAAGX,EAAIC,EAAIC,EAAI,IAMjCL,CAASJ,EAAI,EAAG,EAAGN,EAAaG,EA1BxB,IAsCmBsB,KAThB,SAACnB,KAS2BoB,WAPtB,SAACpB,GAEC,KAAfA,EAAGqB,SAAiC,KAAfrB,EAAGqB,SAC1BrB,EAAGsB,WAAW,iBAAkB","file":"static/js/37.bcee265d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nconst Artwork = (props) => {\r\n  const canvasWidth = window.innerWidth;\r\n  const canvasHeight = window.innerHeight;\r\n  const N = 3; //number of recursive steps\r\n\r\n  function mondrian(p5, x, y, x2, y2, N) {\r\n    if (N === 0) {\r\n      //base case\r\n      var borderWeight = 2; //stroke weight\r\n      var col = [\"#ffcb21\", \"#ffffff\", \"#537bbe\", \"#e44240\"]; //yellow, white, blue, red\r\n\r\n      p5.fill(col[p5.floor(p5.random(col.length))]); //randomly choose color\r\n      p5.strokeWeight(borderWeight);\r\n      p5.rect(x, y, x2 - x - borderWeight, y2 - y - borderWeight);\r\n    } else {\r\n      //recursive step -- break current rect() into 4 new random rectangles\r\n      var i = p5.floor(p5.random(x, x2)); //random x within current rect()\r\n      var j = p5.floor(p5.random(y, y2)); //random y within current rect()\r\n\r\n      //recurse all rectangles\r\n      mondrian(p5, x, y, i, j, N - 1); //upper left rect()\r\n      mondrian(p5, i, y, x2, j, N - 1); //upper right rect()\r\n      mondrian(p5, x, j, i, y2, N - 1); //lower left rect()\r\n      mondrian(p5, i, j, x2, y2, N - 1); //lower right ()\r\n    }\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\r\n    mondrian(p5, 1, 1, canvasWidth, canvasHeight, N);\r\n  };\r\n\r\n  const draw = (p5) => {};\r\n\r\n  const keyPressed = (p5) => {\r\n    //save the canvas when press \"s\" or space\r\n    if (p5.keyCode === 83 || p5.keyCode === 32) {\r\n      p5.saveCanvas(\"simons_artwork\", \"jpg\");\r\n    }\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} keyPressed={keyPressed} />;\r\n};\r\n\r\nexport default Artwork;"],"sourceRoot":""}