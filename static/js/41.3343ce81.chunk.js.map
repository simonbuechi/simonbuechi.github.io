{"version":3,"sources":["artworks/A008.js"],"names":["Artwork","props","p","x","y","ang","baseHue","CANVAS_WIDTH","window","localStorage","getItem","innerWidth","CANVAS_HEIGHT","innerHeight","SEED","reset","p5","background","smooth","noStroke","fill","int","random","createVector","noise","setup","canvasParentRef","createCanvas","parent","noiseSeed","floor","randomSeed","noiseDetail","colorMode","HSB","draw","translate","width","height","cos","sin","rotate","i","z","n","TWO_PI","color","ellipse","step","add","noLoop","keyPressed","key","clear","redraw","fileName","location","hash","replace","saveCanvas"],"mappings":"oHAAA,6CAyGeA,UApGC,SAACC,GAEf,IAkBIC,EAAGC,EAAGC,EAAGC,EAAKC,EAlBZC,EAAeC,OAAOC,aAAaC,QAAQ,eAAiBF,OAAOC,aAAaC,QAAQ,eAAiBF,OAAOG,WAChHC,EAAgBJ,OAAOC,aAAaC,QAAQ,gBAAkBF,OAAOC,aAAaC,QAAQ,gBAAkBF,OAAOK,YACnHC,EAAON,OAAOC,aAAaC,QAAQ,aAkBnCK,EAAQ,SAACC,GAEbd,EAAI,KACJC,EAAI,EACJC,EAAI,EACJC,EAAM,EACNW,EAAGC,WAAW,GACdD,EAAGE,SACHF,EAAGG,WACHH,EAAGI,KAAK,GAAI,IACZd,EAAUU,EAAGK,IAAIL,EAAGM,OAAO,EAAE,MAC7BpB,EAAIc,EAAGO,aAA6B,EAAhBP,EAAGQ,MAAM,KAAW,EAAmB,EAAhBR,EAAGQ,MAAM,KAAW,EAAG,IAgEpE,OAAO,kBAAC,IAAD,CAAQC,MA7DD,SAACT,EAAIU,GACjBV,EAAGW,aAAapB,EAAcK,GAAegB,OAAOF,GACpDV,EAAGa,UAAmB,OAATf,EAAgBA,EAAOE,EAAGc,MAAMd,EAAGM,OAAO,EAAG,OAC1DN,EAAGe,WAAoB,OAATjB,EAAgBA,EAAOE,EAAGc,MAAMd,EAAGM,OAAO,EAAG,OAC3DN,EAAGgB,YAAY,EAAG,IAClBhB,EAAGiB,UAAUjB,EAAGkB,IAAK,IAAK,IAAK,IAAK,GACpCnB,EAAMC,IAuDqBmB,KApDhB,SAACnB,GAEZA,EAAGoB,UAAUpB,EAAGqB,MAAQ,EAAGrB,EAAGsB,OAAS,GAEvCtB,EAAGoB,UAAwB,GAAdpB,EAAGuB,IAAIlC,GAAyB,GAAdW,EAAGwB,IAAInC,IACtCW,EAAGyB,OAAOpC,GAEV,IAAK,IAAIqC,EA9CE,IA8CQA,EAAI,EAAGA,IAAK,CAC7B,IAAMC,EAAqBzC,EAAEyC,EAlCpB,GAmCHC,EAAI,EAAI5B,EAAG6B,OAAS7B,EAAGQ,MAAMtB,EAAEC,EAAIA,EA5ClC,GA4C0CD,EAAEE,EAAIA,EA3ChD,GA2CwDuC,GAG/D3B,EAAGI,KAAKJ,EAAG8B,MAAMxC,EAAY,IAAFoC,EAnDlB,IAmD+B,IAAK,GAAI1B,EAAGK,IAAQ,IAAJqB,EAnD/C,KAmDgE,KACzE1B,EAAG+B,QAAQ5C,EAAGC,EAAG,IAAM,KAEvBD,GAAKa,EAAGuB,IAAIK,GA9CL,EA+CPxC,GAAKY,EAAGwB,IAAII,GA9CL,EAiDT,IAAII,EAGFA,EAAOhC,EAAGO,aAAa,EAAG,EAAGP,EAAGwB,IAlDzB,EAkDkCnC,GAvDlC,GA4DTH,EAAE+C,IAAID,GAEN7C,EAAIC,EAAI,GAERC,GApEW,OAqEAW,EAAG6B,QAGZ7B,EAAGkC,UAiBkCC,WAbtB,SAACnC,GAMlB,GALe,MAAXA,EAAGoC,MACLpC,EAAGqC,QACHtC,EAAMC,GACNA,EAAGsC,UAEU,MAAXtC,EAAGoC,IAAa,CAClB,IAAIG,EAAW,cAAgB/C,OAAOgD,SAASC,KAC/CF,EAASG,QAAQ,gBAAiB,IAClC1C,EAAG2C,WAAWJ,EAAU","file":"static/js/41.3343ce81.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\n// inspired by https://openprocessing.org/sketch/1006142\r\n\r\nconst Artwork = (props) => {\r\n  // get seed from localstorage\r\n  const CANVAS_WIDTH = window.localStorage.getItem(\"customWidth\") ? window.localStorage.getItem(\"customWidth\") : window.innerWidth;\r\n  const CANVAS_HEIGHT = window.localStorage.getItem(\"customHeight\") ? window.localStorage.getItem(\"customHeight\") : window.innerHeight;\r\n  const SEED = window.localStorage.getItem(\"signature\");\r\n  // number of points in the filament\r\n  const iter = 600;\r\n  // angle step\r\n  const sang = 0.005;\r\n  // scale of noise space\r\n  const sx = 20;\r\n  const sy = 20;\r\n  const sz = 5;\r\n  // x,y change constant\r\n  const cx = 0;\r\n  const cy = 0;\r\n  // freq of z wobble amplitude\r\n  const fr = 2;\r\n  // rotational symmetry\r\n  const symm = 20;\r\n  let p, x, y, ang, baseHue;\r\n\r\n  const reset = (p5) => {\r\n    // reset space start point, position, angle\r\n    p = null;\r\n    x = 0;\r\n    y = 0;\r\n    ang = 0;\r\n    p5.background(0);\r\n    p5.smooth();\r\n    p5.noStroke();\r\n    p5.fill(35, 40);\r\n    baseHue = p5.int(p5.random(0,360));\r\n    p = p5.createVector(p5.noise(100) * 2 - 1, p5.noise(200) * 2 - 1, 0);\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT).parent(canvasParentRef);\r\n    p5.noiseSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.randomSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.noiseDetail(4, 0.5);\r\n    p5.colorMode(p5.HSB, 360, 100, 100, 1);\r\n    reset(p5);\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    // make full circle\r\n    p5.translate(p5.width / 2, p5.height / 2);    \r\n    // set starting position and rotate\r\n    p5.translate(p5.cos(ang) * 80, p5.sin(ang) * 80);\r\n    p5.rotate(ang);\r\n    // make filament\r\n    for (let i = iter; i > 0; i--) {\r\n      const z = symm < 0 ? p.z : p.z % symm;\r\n      const n = 2 * p5.TWO_PI * p5.noise(p.x + x / sx, p.y + y / sy, z);\r\n      //const alpha = p5.map(p5.noise(p.x + x / sx, p.y + y / sy), 0, 1, 0, 1);\r\n      //p5.fill(p5.color(i * colorIter, i * colorIter * 0.8, i * colorIter * 0.5, alpha));\r\n      p5.fill(p5.color(baseHue + i*100/iter % 360, 70, p5.int(i * 100 / iter), 0.8));\r\n      p5.ellipse(x, y, 0.55, 0.55);\r\n      // change drawing position\r\n      x += p5.cos(n) + cx;\r\n      y += p5.sin(n) + cy;\r\n    }\r\n    // change starting point in the noise space by moving throught z axis\r\n    let step;\r\n    if (sz > 0.9) {\r\n      // option 1: wobble\r\n      step = p5.createVector(0, 0, p5.sin(fr * ang) / sz);\r\n    } else {\r\n      // option 2: constant movment\r\n      step = p5.createVector(0, 0, sz);\r\n    }\r\n    p.add(step);\r\n    // reset drawing coords\r\n    x = y = 0;\r\n    // change angle\r\n    ang += sang;\r\n    if (ang >= p5.TWO_PI) {\r\n      //p5.fill(0);\r\n      //p5.ellipse(0, 0, p5.floor(p5.noise(100) * MAX_CIRCLE_SIZE), p5.floor(p5.noise(200) * MAX_CIRCLE_SIZE));\r\n      p5.noLoop();\r\n    }\r\n  };\r\n\r\n  const keyPressed = (p5) => {\r\n    if (p5.key === 'r') {\r\n      p5.clear();\r\n      reset(p5);\r\n      p5.redraw();\r\n    }\r\n    if (p5.key === 's') {\r\n      let fileName = \"SimonBuechi\" + window.location.hash;\r\n      fileName.replace(/[^a-zA-Z0-9]/g, \"\");\r\n      p5.saveCanvas(fileName, \"jpg\");\r\n    }\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} keyPressed={keyPressed} />;\r\n};\r\n\r\nexport default Artwork;"],"sourceRoot":""}