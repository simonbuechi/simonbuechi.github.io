{"version":3,"sources":["artworks/A013.js"],"names":["Delaunay","circumcircle","vertices","i","j","k","xc","yc","m1","m2","mx1","mx2","my1","my2","dx","dy","x1","y1","x2","y2","x3","y3","fabsy1y2","Math","abs","fabsy2y3","x","y","r","dedup","edges","a","b","m","n","length","splice","triangulate","key","indices","st","open","closed","c","slice","Array","sort","dmax","xmid","ymid","xmin","Number","POSITIVE_INFINITY","ymin","xmax","NEGATIVE_INFINITY","ymax","max","supertriangle","push","undefined","contains","tri","p","d","u","v","Artwork","props","canvasWidth","window","innerWidth","canvasHeight","innerHeight","seed","localStorage","getItem","allParticles","xoff","Particle","p5","splitCount","this","life","pos","Vector","vel","random2D","mult","map","move","add","setup","canvasParentRef","createCanvas","parent","noiseSeed","floor","random","randomSeed","colorMode","HSB","background","draw","frameCount","noise","width","height","blendMode","BLEND","SCREEN","mag","data","pt","strokeWeight","particle1","particle2","particle3","dist","mass","drawingContext","shadowColor","color","shadowBlur","noFill","stroke","triangle","noStroke","fill","keyPressed","keyCode","saveCanvas"],"mappings":"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","file":"static/js/46.f01a8b4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport { Vector } from \"p5\";\r\n\r\nconst Artwork = (props) => {\r\n  //global constants\r\n  const canvasWidth = window.innerWidth;\r\n  const canvasHeight = window.innerHeight;\r\n  const seed = window.localStorage.getItem(\"signature\");\r\n  const XOFF_STEP = 0.015;\r\n  var allParticles = [];\r\n  var maxSplitCount = 3;\r\n  var distThreshold = 75;\r\n  let xoff = 0;\r\n\r\n  class Particle {\r\n    constructor(p5, x, y, splitCount) {\r\n      this.splitCount = splitCount;\r\n      this.life = 0;\r\n      this.pos = new Vector(x, y);\r\n      this.vel = Vector.random2D();\r\n      this.vel.mult(p5.map(this.splitCount, 0, maxSplitCount, 6, 2));\r\n\r\n      this.move = function () {\r\n        this.life++;\r\n        this.vel.mult(0.9);\r\n        this.pos.add(this.vel);\r\n\r\n        if (this.life % 10 === 0) {\r\n          if (this.splitCount > 0) {\r\n            this.splitCount -= 1;\r\n            allParticles.push(new Particle(p5, this.pos.x, this.pos.y, this.splitCount - 1));\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    //setup canvas\r\n    p5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\r\n    p5.noiseSeed(seed !== null ? seed : p5.floor(p5.random(1, 10000)));\r\n    p5.randomSeed(seed !== null ? seed : p5.floor(p5.random(1, 10000)));\r\n    p5.colorMode(p5.HSB, 255);\r\n    p5.background(0);\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    if (p5.frameCount % 5 === 0) {\r\n      allParticles.push(new Particle(p5, p5.map(p5.noise(xoff), 0, 1, 0, p5.width), p5.map(p5.noise(xoff + 10), 0, 1, 0, p5.height), maxSplitCount));\r\n    }\r\n    p5.blendMode(p5.BLEND);\r\n    p5.background(0);\r\n    p5.blendMode(p5.SCREEN);\r\n    for (let i = allParticles.length - 1; i > -1; i--) {\r\n      allParticles[i].move();\r\n      if (allParticles[i].vel.mag() < 0.01) {\r\n        allParticles.splice(i, 1);\r\n      }\r\n    }\r\n    if (allParticles.length > 0) {\r\n      let data = Delaunay.triangulate(\r\n        allParticles.map(function (pt) {\r\n          return [pt.pos.x, pt.pos.y];\r\n        })\r\n      );\r\n      p5.strokeWeight(0.1);\r\n      for (let i = 0; i < data.length; i += 3) {\r\n        let particle1 = allParticles[data[i]];\r\n        let particle2 = allParticles[data[i + 1]];\r\n        let particle3 = allParticles[data[i + 2]];\r\n        if (\r\n          particle1.pos.dist(particle2.pos) > distThreshold ||\r\n          particle2.pos.dist(particle3.pos) > distThreshold ||\r\n          particle1.pos.dist(particle3.pos) > distThreshold\r\n        ) {\r\n          continue;\r\n        }\r\n        let mass = p5.max(-2 + particle1.life * 0.75, 0);\r\n        p5.drawingContext.shadowColor = p5.color(110 + particle1.life * 1.5, 255, 255, 255 - particle1.life * 5);\r\n        p5.drawingContext.shadowBlur = mass;\r\n        p5.noFill();\r\n        p5.stroke(0);\r\n        p5.strokeWeight(mass);\r\n        p5.triangle(particle1.pos.x, particle1.pos.y, particle2.pos.x, particle2.pos.y, particle3.pos.x, particle3.pos.y);\r\n      }\r\n      xoff += XOFF_STEP;\r\n    }\r\n    p5.drawingContext.shadowBlur = 0;\r\n    p5.noStroke();\r\n    p5.fill(255);\r\n  };\r\n\r\n  const keyPressed = (p5) => {\r\n    //save the canvas when press \"s\" or space\r\n    if (p5.keyCode === 83 || p5.keyCode === 32) {\r\n      p5.saveCanvas(\"simons_artwork\", \"jpg\");\r\n    }\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} keyPressed={keyPressed} />;\r\n};\r\n\r\n/*\r\nOrginally from Jay LaPorte at https://github.com/ironwallaby/delaunay/blob/master/delaunay.js\r\nTweaked it so instead of raising an error it would return an empty list.\r\n*/\r\nvar Delaunay;\r\nvar EPSILON = 1.0 / 1048576.0;\r\n\r\nfunction supertriangle(vertices) {\r\n  var xmin = Number.POSITIVE_INFINITY,\r\n    ymin = Number.POSITIVE_INFINITY,\r\n    xmax = Number.NEGATIVE_INFINITY,\r\n    ymax = Number.NEGATIVE_INFINITY,\r\n    i,\r\n    dx,\r\n    dy,\r\n    dmax,\r\n    xmid,\r\n    ymid;\r\n\r\n  for (i = vertices.length; i--; ) {\r\n    if (vertices[i][0] < xmin) xmin = vertices[i][0];\r\n    if (vertices[i][0] > xmax) xmax = vertices[i][0];\r\n    if (vertices[i][1] < ymin) ymin = vertices[i][1];\r\n    if (vertices[i][1] > ymax) ymax = vertices[i][1];\r\n  }\r\n\r\n  dx = xmax - xmin;\r\n  dy = ymax - ymin;\r\n  dmax = Math.max(dx, dy);\r\n  xmid = xmin + dx * 0.5;\r\n  ymid = ymin + dy * 0.5;\r\n\r\n  return [\r\n    [xmid - 20 * dmax, ymid - dmax],\r\n    [xmid, ymid + 20 * dmax],\r\n    [xmid + 20 * dmax, ymid - dmax],\r\n  ];\r\n}\r\n\r\nfunction circumcircle(vertices, i, j, k) {\r\n  var x1 = vertices[i][0],\r\n    y1 = vertices[i][1],\r\n    x2 = vertices[j][0],\r\n    y2 = vertices[j][1],\r\n    x3 = vertices[k][0],\r\n    y3 = vertices[k][1],\r\n    fabsy1y2 = Math.abs(y1 - y2),\r\n    fabsy2y3 = Math.abs(y2 - y3),\r\n    xc,\r\n    yc,\r\n    m1,\r\n    m2,\r\n    mx1,\r\n    mx2,\r\n    my1,\r\n    my2,\r\n    dx,\r\n    dy;\r\n\r\n  /* Check for coincident points */\r\n  if (fabsy1y2 < EPSILON && fabsy2y3 < EPSILON) return;\r\n  //throw new Error(\"Eek! Coincident points!\");\r\n\r\n  if (fabsy1y2 < EPSILON) {\r\n    m2 = -((x3 - x2) / (y3 - y2));\r\n    mx2 = (x2 + x3) / 2.0;\r\n    my2 = (y2 + y3) / 2.0;\r\n    xc = (x2 + x1) / 2.0;\r\n    yc = m2 * (xc - mx2) + my2;\r\n  } else if (fabsy2y3 < EPSILON) {\r\n    m1 = -((x2 - x1) / (y2 - y1));\r\n    mx1 = (x1 + x2) / 2.0;\r\n    my1 = (y1 + y2) / 2.0;\r\n    xc = (x3 + x2) / 2.0;\r\n    yc = m1 * (xc - mx1) + my1;\r\n  } else {\r\n    m1 = -((x2 - x1) / (y2 - y1));\r\n    m2 = -((x3 - x2) / (y3 - y2));\r\n    mx1 = (x1 + x2) / 2.0;\r\n    mx2 = (x2 + x3) / 2.0;\r\n    my1 = (y1 + y2) / 2.0;\r\n    my2 = (y2 + y3) / 2.0;\r\n    xc = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);\r\n    yc = fabsy1y2 > fabsy2y3 ? m1 * (xc - mx1) + my1 : m2 * (xc - mx2) + my2;\r\n  }\r\n\r\n  dx = x2 - xc;\r\n  dy = y2 - yc;\r\n  return { i: i, j: j, k: k, x: xc, y: yc, r: dx * dx + dy * dy };\r\n}\r\n\r\nfunction dedup(edges) {\r\n  var i, j, a, b, m, n;\r\n\r\n  for (j = edges.length; j; ) {\r\n    b = edges[--j];\r\n    a = edges[--j];\r\n\r\n    for (i = j; i; ) {\r\n      n = edges[--i];\r\n      m = edges[--i];\r\n\r\n      if ((a === m && b === n) || (a === n && b === m)) {\r\n        edges.splice(j, 2);\r\n        edges.splice(i, 2);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nDelaunay = {\r\n  triangulate: function (vertices, key) {\r\n    var n = vertices.length,\r\n      i,\r\n      j,\r\n      indices,\r\n      st,\r\n      open,\r\n      closed,\r\n      edges,\r\n      dx,\r\n      dy,\r\n      a,\r\n      b,\r\n      c;\r\n\r\n    /* Bail if there aren't enough vertices to form any triangles. */\r\n    if (n < 3) return [];\r\n\r\n    /* Slice out the actual vertices from the passed objects. (Duplicate the\r\n     * array even if we don't, though, since we need to make a supertriangle\r\n     * later on!) */\r\n    vertices = vertices.slice(0);\r\n\r\n    if (key) for (i = n; i--; ) vertices[i] = vertices[i][key];\r\n\r\n    /* Make an array of indices into the vertex array, sorted by the\r\n     * vertices' x-position. */\r\n    indices = new Array(n);\r\n\r\n    for (i = n; i--; ) indices[i] = i;\r\n\r\n    indices.sort(function (i, j) {\r\n      return vertices[j][0] - vertices[i][0];\r\n    });\r\n\r\n    /* Next, find the vertices of the supertriangle (which contains all other\r\n     * triangles), and append them onto the end of a (copy of) the vertex\r\n     * array. */\r\n    st = supertriangle(vertices);\r\n    vertices.push(st[0], st[1], st[2]);\r\n\r\n    /* Initialize the open list (containing the supertriangle and nothing\r\n     * else) and the closed list (which is empty since we havn't processed\r\n     * any triangles yet). */\r\n    var circCircle = circumcircle(vertices, n + 0, n + 1, n + 2);\r\n    if (circCircle === undefined) return [];\r\n\r\n    open = [circumcircle(vertices, n + 0, n + 1, n + 2)];\r\n    closed = [];\r\n    edges = [];\r\n\r\n    /* Incrementally add each vertex to the mesh. */\r\n    for (i = indices.length; i--; edges.length = 0) {\r\n      c = indices[i];\r\n\r\n      /* For each open triangle, check to see if the current point is\r\n       * inside it's circumcircle. If it is, remove the triangle and add\r\n       * it's edges to an edge list. */\r\n      for (j = open.length; j--; ) {\r\n        /* If this point is to the right of this triangle's circumcircle,\r\n         * then this triangle should never get checked again. Remove it\r\n         * from the open list, add it to the closed list, and skip. */\r\n        dx = vertices[c][0] - open[j].x;\r\n        if (dx > 0.0 && dx * dx > open[j].r) {\r\n          closed.push(open[j]);\r\n          open.splice(j, 1);\r\n          continue;\r\n        }\r\n\r\n        /* If we're outside the circumcircle, skip this triangle. */\r\n        dy = vertices[c][1] - open[j].y;\r\n        if (dx * dx + dy * dy - open[j].r > EPSILON) continue;\r\n\r\n        /* Remove the triangle and add it's edges to the edge list. */\r\n        edges.push(open[j].i, open[j].j, open[j].j, open[j].k, open[j].k, open[j].i);\r\n        open.splice(j, 1);\r\n      }\r\n\r\n      /* Remove any doubled edges. */\r\n      dedup(edges);\r\n\r\n      /* Add a new triangle for each edge. */\r\n      for (j = edges.length; j; ) {\r\n        b = edges[--j];\r\n        a = edges[--j];\r\n        open.push(circumcircle(vertices, a, b, c));\r\n      }\r\n    }\r\n\r\n    /* Copy any remaining open triangles to the closed list, and then\r\n     * remove any triangles that share a vertex with the supertriangle,\r\n     * building a list of triplets that represent triangles. */\r\n    for (i = open.length; i--; ) closed.push(open[i]);\r\n    open.length = 0;\r\n\r\n    for (i = closed.length; i--; ) if (closed[i].i < n && closed[i].j < n && closed[i].k < n) open.push(closed[i].i, closed[i].j, closed[i].k);\r\n\r\n    /* Yay, we're done! */\r\n    return open;\r\n  },\r\n  contains: function (tri, p) {\r\n    /* Bounding box test first, for quick rejections. */\r\n    if (\r\n      (p[0] < tri[0][0] && p[0] < tri[1][0] && p[0] < tri[2][0]) ||\r\n      (p[0] > tri[0][0] && p[0] > tri[1][0] && p[0] > tri[2][0]) ||\r\n      (p[1] < tri[0][1] && p[1] < tri[1][1] && p[1] < tri[2][1]) ||\r\n      (p[1] > tri[0][1] && p[1] > tri[1][1] && p[1] > tri[2][1])\r\n    )\r\n      return null;\r\n\r\n    var a = tri[1][0] - tri[0][0],\r\n      b = tri[2][0] - tri[0][0],\r\n      c = tri[1][1] - tri[0][1],\r\n      d = tri[2][1] - tri[0][1],\r\n      i = a * d - b * c;\r\n\r\n    /* Degenerate tri. */\r\n    if (i === 0.0) return null;\r\n\r\n    var u = (d * (p[0] - tri[0][0]) - b * (p[1] - tri[0][1])) / i,\r\n      v = (a * (p[1] - tri[0][1]) - c * (p[0] - tri[0][0])) / i;\r\n\r\n    /* If we're outside the tri, fail. */\r\n    if (u < 0.0 || v < 0.0 || u + v > 1.0) return null;\r\n\r\n    return [u, v];\r\n  },\r\n};\r\n\r\nexport default Artwork;"],"sourceRoot":""}