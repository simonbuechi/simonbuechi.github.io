{"version":3,"sources":["artworks/A009.js"],"names":["Artwork","props","iterations","CANVAS_WIDTH","window","localStorage","getItem","innerWidth","CANVAS_HEIGHT","innerHeight","SEED","colors","brush","x","y","px","py","xoff","i","symmetry","splatter","p5","radius","level","ellipse","num","random","a","TWO_PI","nx","cos","ny","sin","stipple","color","noStroke","fill","setup","canvasParentRef","createCanvas","parent","noiseSeed","floor","randomSeed","noiseDetail","colorMode","HSB","backgroundHue","background","Math","max","width","height","step","gradient","lerpColor","BACKGROUND_BRIGHTNESS","abs","noise","draw","frameCount","s","dist","min","strokeWeight","stroke","line","drizzle","length","setAlpha","noLoop","keyPressed","keyCode","fileName","location","hash","replace","saveCanvas"],"mappings":"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","file":"static/js/42.ffa0de54.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nconst Artwork = (props) => {\r\n  //global constants\r\n  const CANVAS_WIDTH = window.localStorage.getItem(\"customWidth\") ? window.localStorage.getItem(\"customWidth\") : window.innerWidth;\r\n  const CANVAS_HEIGHT = window.localStorage.getItem(\"customHeight\") ? window.localStorage.getItem(\"customHeight\") : window.innerHeight;\r\n  const SEED = window.localStorage.getItem(\"signature\");\r\n  const ITERATIONS_MINIMUM = 200;\r\n  const ITERATIONS_MULTIPLIER = 800;\r\n  const BRUSH_EXTENSION = 1.2; // make sure to fill in edges of canvas\r\n  const BRUSH_THICKNESS = 90;\r\n  const BRUSH_THICKNESS_MAX = 22;\r\n  const COLOR_VARIANCE = 8;\r\n  const BACKGROUND_SATURATION = 40;\r\n  const BACKGROUND_BRIGHTNESS = 50;\r\n  const BACKGROUND_BRIGHTNESS_LIGHTEN = 30;\r\n  const STIPPLE_DISTANCE = 10;\r\n  const STIPPLE_FREQUENCY = 12;\r\n  const STIPPLE_OPACITY = 0.6;\r\n  const SPLATTER_LEVELS = 6;\r\n  const SPLATTER_FREQUENCY = 35;\r\n  const SPLATTER_SIZE_MAX = 25;\r\n  const SPLATTER_OPACITY = 0.4;\r\n  //global variables\r\n  let colors = [];\r\n  let brush = { x: 0, y: 0, px: 0, py: 0 };\r\n  let xoff = 0;\r\n  let i = 0;\r\n  let iterations;\r\n  let symmetry = false;\r\n\r\n  function drizzle(p5) {\r\n    let s = 1 + BRUSH_THICKNESS / p5.dist(brush.px, brush.py, brush.x, brush.y);\r\n    s = p5.min(BRUSH_THICKNESS_MAX, s);\r\n    p5.strokeWeight(s);\r\n    if (symmetry) {\r\n      p5.stroke(0);\r\n      p5.line(brush.px, brush.py, brush.x, brush.y);\r\n      p5.stroke(0);\r\n      p5.line(p5.width - brush.px, p5.height - brush.py, p5.width - brush.x, p5.height - brush.y);\r\n      p5.stroke(255);\r\n      p5.line(p5.width - brush.px, brush.py, p5.width - brush.x, brush.y);\r\n      p5.stroke(255);\r\n      p5.line(brush.px, p5.height - brush.py, brush.x, p5.height - brush.y);\r\n    } else {\r\n      p5.stroke(0);\r\n      p5.line(brush.px, brush.py, brush.x, brush.y);\r\n      p5.stroke(255);\r\n      p5.line(p5.width - brush.px, p5.height - brush.py, p5.width - brush.x, p5.height - brush.y);\r\n    }\r\n  }\r\n\r\n  /*\r\n  function splatterOLD(p5, bx, by) {\r\n    let color = colors[p5.floor(p5.random(colors.length))];\r\n    bx += p5.random(-15, 15);\r\n    by += p5.random(-15, 15);\r\n    let mx = 25 * p5.abs(brush.px - brush.x);\r\n    let my = 25 * p5.abs(brush.py - brush.y);\r\n    for (let i = 0; i < SPLATTER_AMOUNT; i++) {\r\n      xoff2 += 0.01;\r\n      let x = bx + mx * (0.5 - p5.noise(xoff2 + i));\r\n      let y = by + my * (0.5 - p5.noise(xoff2 + 2 * i));\r\n      let s = SPLATTER_SIZE_MAX / p5.dist(bx, by, x, y);\r\n      if (s > SPLATTER_SIZE_MAX) s = SPLATTER_SIZE_MAX;\r\n      p5.noStroke();\r\n      //let a = 255 - s * 5;\r\n      //color.setAlpha(a);\r\n      color.setAlpha(SPLATTER_OPACITY);\r\n      p5.fill(color);\r\n      p5.ellipse(x, y, s);\r\n      xoff2 += 0.01;\r\n    }\r\n  }\r\n  */\r\n\r\n  function splatter(p5, x, y, radius, level) {\r\n    p5.ellipse(x, y, radius * 2, radius * 2);\r\n    if (level > 1) {\r\n      level = level - 1;\r\n      let num = p5.random(2, 5);\r\n      for (let i = 0; i < num; i++) {\r\n        let a = p5.random(0, p5.TWO_PI);\r\n        let nx = x + (p5.cos(a) * level * SPLATTER_SIZE_MAX) / 6;\r\n        let ny = y + (p5.sin(a) * level * SPLATTER_SIZE_MAX) / 6;\r\n        splatter(p5, nx, ny, radius / 2, level);\r\n      }\r\n    }\r\n  }\r\n\r\n  function stipple(p5, x, y, color) {\r\n    p5.noStroke();\r\n    p5.fill(color, STIPPLE_OPACITY);\r\n    let radius = p5.random(2, 12);\r\n    p5.ellipse(x + p5.random(-STIPPLE_DISTANCE, STIPPLE_DISTANCE), y + p5.random(STIPPLE_DISTANCE, -STIPPLE_DISTANCE), radius);\r\n    radius = p5.random(3, 12);\r\n    p5.ellipse(x + p5.random(-STIPPLE_DISTANCE, STIPPLE_DISTANCE), y + p5.random(STIPPLE_DISTANCE, -STIPPLE_DISTANCE), radius);\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // setup basics\r\n    p5.createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT).parent(canvasParentRef);\r\n    p5.noiseSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.randomSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.noiseDetail(4, 0.5);\r\n    p5.colorMode(p5.HSB, 100, 100, 100);\r\n    // set symmetry mode\r\n    symmetry = p5.random() > 0.5 ? true : false;\r\n    //set background\r\n    const backgroundHue = p5.floor(p5.random(0, 100));\r\n    p5.background(p5.color(backgroundHue, BACKGROUND_SATURATION, BACKGROUND_BRIGHTNESS));\r\n    p5.noStroke();\r\n    for (let i = Math.max(p5.width, p5.height); i > 0; i--) {\r\n      const step = i / Math.max(p5.width, p5.height);\r\n      const gradient = p5.lerpColor(\r\n        p5.color(backgroundHue, BACKGROUND_SATURATION, BACKGROUND_BRIGHTNESS + BACKGROUND_BRIGHTNESS_LIGHTEN),\r\n        p5.color(backgroundHue, BACKGROUND_SATURATION, BACKGROUND_BRIGHTNESS),\r\n        step\r\n      );\r\n      p5.fill(gradient);\r\n      p5.ellipse(p5.width / 2, p5.height / 2, step * p5.width, step * p5.height);\r\n    }\r\n    // setup color scheme\r\n    colors = [\r\n      p5.color(backgroundHue, p5.floor(p5.random() * (95 - 70) + 70), 50),\r\n      p5.color(p5.abs(backgroundHue + 1 * COLOR_VARIANCE) % 100, p5.floor(p5.random() * (95 - 70) + 70), 50),\r\n      p5.color(p5.abs(backgroundHue + 2 * COLOR_VARIANCE) % 100, p5.floor(p5.random() * (95 - 70) + 70), 50),\r\n      p5.color(p5.abs(backgroundHue - 1 * COLOR_VARIANCE) % 100, p5.floor(p5.random() * (95 - 70) + 70), 50),\r\n      p5.color(p5.abs(backgroundHue - 2 * COLOR_VARIANCE) % 100, p5.floor(p5.random() * (95 - 70) + 70), 50),\r\n    ];\r\n\r\n    //set no of iterations\r\n    iterations = p5.noise(100) * ITERATIONS_MULTIPLIER + ITERATIONS_MINIMUM;\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    // set brush location\r\n    brush.x = p5.width * BRUSH_EXTENSION * p5.noise(xoff);\r\n    brush.y = p5.height * BRUSH_EXTENSION * p5.noise(xoff + 5);\r\n    if (p5.frameCount > 10) {\r\n      drizzle(p5);\r\n    }\r\n    if (p5.frameCount % STIPPLE_FREQUENCY === 0) {\r\n      if (symmetry) {\r\n        stipple(p5, brush.x, brush.y, 0);\r\n        stipple(p5, p5.width - brush.x, p5.height - brush.y, 0);\r\n        stipple(p5, brush.x, p5.height - brush.y, 255);\r\n        stipple(p5, p5.width - brush.x, brush.y, 255);\r\n      } else {\r\n        stipple(p5, brush.x, brush.y, 0);\r\n        stipple(p5, p5.width - brush.x, p5.height - brush.y, 255);\r\n      }\r\n    }\r\n    if (p5.frameCount % SPLATTER_FREQUENCY === 0) {\r\n      p5.noStroke();\r\n      let color = colors[p5.floor(p5.random(colors.length))];\r\n      color.setAlpha(SPLATTER_OPACITY);\r\n      p5.fill(color);\r\n      if (p5.random() > 0.5) {\r\n        splatter(p5, brush.x, brush.y, SPLATTER_SIZE_MAX, SPLATTER_LEVELS);\r\n      } else {\r\n        splatter(p5, p5.width - brush.x, p5.height - brush.y, SPLATTER_SIZE_MAX, SPLATTER_LEVELS);\r\n      }\r\n      if (symmetry) {\r\n        if (p5.random() > 0.5) {\r\n          splatter(p5, brush.x, p5.height - brush.y, SPLATTER_SIZE_MAX, SPLATTER_LEVELS);\r\n        } else {\r\n          splatter(p5, p5.width - brush.x, brush.y, SPLATTER_SIZE_MAX, SPLATTER_LEVELS);\r\n        }\r\n      }\r\n    }\r\n    brush.px = brush.x;\r\n    brush.py = brush.y;\r\n    xoff = xoff + 0.01;\r\n    i = i + 1;\r\n    if (i > iterations) {\r\n      p5.noLoop();\r\n    }\r\n  };\r\n\r\n  const keyPressed = (p5) => {\r\n    //save the canvas when press \"s\" or space\r\n    if (p5.keyCode === 83 || p5.keyCode === 32) {\r\n      let fileName = \"SimonBuechi\" + window.location.hash;\r\n      fileName.replace(/[^a-zA-Z0-9]/g, \"\");\r\n      p5.saveCanvas(fileName, \"jpg\");\r\n    }\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} keyPressed={keyPressed} />;\r\n};\r\n\r\nexport default Artwork;"],"sourceRoot":""}