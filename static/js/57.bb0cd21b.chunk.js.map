{"version":3,"sources":["artworks/A024.js"],"names":["Artwork","props","CANVAS_WIDTH","window","localStorage","getItem","innerWidth","CANVAS_HEIGHT","innerHeight","SEED","agent","colors","Agent","p5","this","p","createVector","random","width","height","pOld","x","y","step","scale","temp","color","direction","strokeWidth","vector_field","strokeWeight","stroke","line","myScale","map","u","sin","cos","v","setup","canvasParentRef","createCanvas","parent","noiseSeed","floor","randomSeed","colorMode","HSB","baseHue","push","i","NUMBER_OF_COLORS","background","strokeCap","SQUARE","draw","frameCount","noLoop","length","update","keyPressed","keyCode","fileName","location","hash","replace","saveCanvas"],"mappings":"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","file":"static/js/57.bb0cd21b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nconst Artwork = (props) => {\r\n  //global constants\r\n  const CANVAS_WIDTH = window.localStorage.getItem(\"customWidth\") ? window.localStorage.getItem(\"customWidth\") : window.innerWidth;\r\n  const CANVAS_HEIGHT = window.localStorage.getItem(\"customHeight\") ? window.localStorage.getItem(\"customHeight\") : window.innerHeight;\r\n  const SEED = window.localStorage.getItem(\"signature\");\r\n  //const COLORS = [\"#ff0000\", \"#feb30f\", \"#0aa4f7\", \"#000000\", \"#ffffff\"];\r\n  const NUMBER_OF_AGENTS = 300;\r\n  const BORDER =-50;\r\n  const NUMBER_OF_COLORS = 8;\r\n  const COLOR_VARIANCE = 50;\r\n  let agent = [];\r\n  let colors =  [];\r\n  \r\n  class Agent {\r\n    constructor(p5) {\r\n      this.p = p5.createVector(p5.random(BORDER,p5.width - BORDER), p5.random(BORDER, p5.height - BORDER));\r\n      //this.p = p5.createVector(floor(p5.random(width)),floor(p5.random(height)));\r\n      this.pOld = p5.createVector(this.p.x, this.p.y);\r\n      this.step = 0.5;\r\n      this.scale = 5;\r\n      let temp = p5.random(colors);\r\n      this.color = temp;\r\n      /*\r\n      this.color = p5.color(\r\n        p5.hue(temp) + p5.randomGaussian()*10,\r\n        p5.saturation(temp) + p5.randomGaussian()*10,\r\n        p5.brightness(temp) * 0.75, \r\n        p5.random(0,50)\r\n        );\r\n        */\r\n      if(p5.random(0,1) > 0.5)\r\n      {\r\n        this.direction = 1;\r\n      } else\r\n      {\r\n        this.direction = -1;\r\n      }\r\n      this.strokeWidth = 2; //p5.random(1,2);\r\n    }\r\n    update(p5) {\r\n      /*\r\n      if (p5.random(0,1) < 1.0e-4)\r\n      {\r\n        this.direction *= -1;\r\n      }\r\n      */\r\n      this.p.x += this.direction * vector_field(p5, this.p.x, this.p.y,this.scale).x * this.step;\r\n      this.p.y += this.direction * vector_field(p5, this.p.x, this.p.y,this.scale).y * this.step;\r\n      p5.strokeWeight(this.strokeWidth);\r\n      p5.stroke(this.color);\r\n      p5.line(this.pOld.x, this.pOld.y, this.p.x, this.p.y);\r\n      //this.pOld.set(this.p);\r\n    }\r\n  }\r\n\r\n  // vector field function \r\n  // the painting agents follow the flow defined \r\n  // by this function \r\n  function vector_field(p5, x, y,myScale) {\r\n    x = p5.map(x, 0, p5.width, -myScale, myScale);\r\n    y = p5.map(y, 0, p5.height, -myScale, myScale);\r\n    let k1 = 5;\r\n    let k2 = 3;\r\n    //let u = p5.sin(k1 * y) + p5.cos(k2 * y) + p5.map(p5.noise(x,y),0,1,-1,1);\r\n    //let v = p5.sin(k2 * x) - p5.cos(k1 * x) + p5.map(p5.noise(x,y),0,1,-1,1);\r\n    let u = p5.sin(k1 * y) + p5.cos(k2 * y);\r\n    let v = p5.sin(k2 * x) - p5.cos(k1 * x);\r\n    return p5.createVector(u,v);\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    //setup canvas & basics\r\n    p5.createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT).parent(canvasParentRef);\r\n    p5.noiseSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.randomSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.colorMode(p5.HSB, 360, 100, 100, 100);\r\n\r\n    //set colors\r\n    let baseHue = p5.floor(p5.random(0,360));\r\n    colors.push(p5.color(1,0,0, 50)); // add black\r\n    colors.push(p5.color(1,0,100, 50)); // add white\r\n    for (let i = 0; i < NUMBER_OF_COLORS -2; i++) {\r\n      colors.push(p5.color((baseHue + i*COLOR_VARIANCE) % 360, 80, 80, 20));\r\n    }\r\n    p5.background(0,0,0);\r\n    //p5.blendMode(p5.DIFFERENCE);\r\n    //p5.rectMode(p5.CENTER);\r\n    p5.strokeCap(p5.SQUARE);\r\n    for (let i = 0; i < NUMBER_OF_AGENTS; i++) {\r\n      agent.push(new Agent(p5));\r\n    }\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    if(p5.frameCount >1500) {\r\n      p5.noLoop();\r\n    }\r\n    for (let i = 0; i < agent.length; i++) {\r\n        agent[i].update(p5);\r\n    }\t\r\n  };\r\n\r\n  const keyPressed = (p5) => {\r\n    //save the canvas when press \"s\" or space\r\n    if (p5.keyCode === 83 || p5.keyCode === 32) {\r\n      let fileName = \"SimonBuechi\" + window.location.hash;\r\n      fileName.replace(/[^a-zA-Z0-9]/g, \"\");\r\n      p5.saveCanvas(fileName, \"jpg\");\r\n    }\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} keyPressed={keyPressed} />;\r\n};\r\n\r\nexport default Artwork;"],"sourceRoot":""}