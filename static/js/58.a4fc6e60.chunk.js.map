{"version":3,"sources":["artworks/A025.js"],"names":["Artwork","props","baseHue","unitLength","rorschachShape","rorschachShapeColor","CANVAS_WIDTH","window","localStorage","getItem","innerWidth","CANVAS_HEIGHT","innerHeight","SEED","colorMode","darkBackgroundMode","RorschachShape","p5","params","this","shapeSize","noiseMagnitudeFactor","centerPosition","createVector","rotationAngle","vertexCount","Math","floor","noiseDistanceScale","noiseTimeScale","xNoiseParameterOffset","random","mult","yNoiseParameterOffset","noiseTime","reachedEndOfScreen","temporalVector","translate","x","y","rotate","drawVertices","yScaleFactor","noiseMagnitude","beginShape","currentBasePositionX","basePositionIntervalDistance","progressRatio","constrain","frameCount","i","distanceFactor","sq","sin","PI","noiseX","noise","noiseY","vertexPositionX","vertexPositionY","vertex","rotatedVertexPosition","set","checkScreen","endShape","absolutePositionX","absolutePositionY","xMargin","width","yMargin","height","NoFillShapeColor","strokeColor","array","alphaValue","push","color","red","green","blue","alpha","strokeColorArray","stroke","index","noFill","setup","canvasParentRef","createCanvas","parent","noiseSeed","randomSeed","HSB","disableFriendlyErrors","frameRate","min","strokeWeight","max","background","rorschachShapeSize","HALF_PI","loop","draw","noLoop","step","apply","keyPressed","keyCode","fileName","location","hash","replace","saveCanvas","key","redraw"],"mappings":"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","file":"static/js/58.a4fc6e60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nconst Artwork = (props) => {\r\n  //global constants\r\n  const CANVAS_WIDTH = window.localStorage.getItem(\"customWidth\") ? window.localStorage.getItem(\"customWidth\") : window.innerWidth;\r\n  const CANVAS_HEIGHT = window.localStorage.getItem(\"customHeight\") ? window.localStorage.getItem(\"customHeight\") : window.innerHeight;\r\n  const SEED = window.localStorage.getItem(\"signature\");\r\n  const IDEAL_FRAME_RATE = 60;\r\n  const DURATION = 1500;\r\n  const COLOR_SATURATION = 80;\r\n  const COLOR_BRIGHTNESS = 90;\r\n  const COLOR_CHANGE_SPEED = 0.1;\r\n  let colorMode = true;\r\n  let darkBackgroundMode = true;\r\n  let baseHue;\r\n  let unitLength;\r\n  let rorschachShape;\r\n  let rorschachShapeColor;\r\n\r\n  class RorschachShape {\r\n    constructor(p5, params) {\r\n      this.shapeSize = params.shapeSize;\r\n      this.noiseMagnitudeFactor = params.noiseMagnitudeFactor;\r\n      this.centerPosition = p5.createVector();\r\n      this.rotationAngle = 0;\r\n      this.vertexCount = params.vertexCount || Math.floor(0.75 * params.shapeSize);\r\n      this.noiseDistanceScale = params.noiseDistanceScale || params.shapeSize / 320;\r\n      this.noiseTimeScale = params.noiseTimeScale || 0.005;\r\n      this.xNoiseParameterOffset\r\n          = p5.createVector(Math.random(), Math.random()).mult(1024);\r\n      this.yNoiseParameterOffset\r\n          = p5.createVector(Math.random(), Math.random()).mult(1024);\r\n      this.noiseTime = 0;\r\n      this.reachedEndOfScreen = false;\r\n      this.temporalVector = p5.createVector();\r\n    }\r\n    step() {\r\n        this.noiseTime += this.noiseTimeScale;\r\n    }\r\n    draw(p5) {\r\n        if (this.reachedEndOfScreen)\r\n            return;\r\n        p5.translate(this.centerPosition.x, this.centerPosition.y);\r\n        p5.rotate(this.rotationAngle);\r\n        this.drawVertices(p5, +1);\r\n        this.drawVertices(p5, -1);\r\n        p5.rotate(-this.rotationAngle);\r\n        p5.translate(-this.centerPosition.x, -this.centerPosition.y);\r\n    }\r\n    drawVertices(p5, yScaleFactor) {\r\n        const noiseMagnitude = this.noiseMagnitudeFactor * 0.5 * this.shapeSize;\r\n        p5.beginShape();\r\n        let currentBasePositionX = -0.5 * this.shapeSize;\r\n        const basePositionIntervalDistance = this.shapeSize / this.vertexCount;\r\n        const progressRatio = p5.constrain(p5.frameCount / DURATION, 0, 1);\r\n        for (let i = 0; i < this.vertexCount; i += 1) {\r\n            const distanceFactor = progressRatio * p5.sq(p5.sin((i / this.vertexCount) * p5.PI));\r\n            const noiseX = (2 * p5.noise(this.xNoiseParameterOffset.x + this.noiseDistanceScale * currentBasePositionX, this.xNoiseParameterOffset.y + this.noiseTime) - 1) * noiseMagnitude;\r\n            const noiseY = (2 * p5.noise(this.yNoiseParameterOffset.x + this.noiseDistanceScale * currentBasePositionX, this.yNoiseParameterOffset.y + this.noiseTime) - 1) * noiseMagnitude;\r\n            const vertexPositionX = currentBasePositionX + distanceFactor * noiseX;\r\n            const vertexPositionY = yScaleFactor * distanceFactor * (0.3 * this.shapeSize + noiseY);\r\n            p5.vertex(vertexPositionX, vertexPositionY);\r\n            const rotatedVertexPosition = this.temporalVector;\r\n            rotatedVertexPosition.set(vertexPositionX, vertexPositionY);\r\n            rotatedVertexPosition.rotate(this.rotationAngle);\r\n            this.checkScreen(p5, this.centerPosition.x + rotatedVertexPosition.x, this.centerPosition.y + rotatedVertexPosition.y);\r\n            currentBasePositionX += basePositionIntervalDistance;\r\n        }\r\n        p5.endShape();\r\n    }\r\n    checkScreen(p5, absolutePositionX, absolutePositionY) {\r\n        const xMargin = 0.01 * p5.width;\r\n        const yMargin = 0.05 * p5.height;\r\n        if (absolutePositionX < xMargin || absolutePositionX > p5.width - xMargin ||\r\n            absolutePositionY < yMargin || absolutePositionY > p5.height - yMargin) {\r\n            this.reachedEndOfScreen = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  class NoFillShapeColor {\r\n    constructor(p5, strokeColor) {\r\n      const array = [];\r\n      for (let alphaValue = 0; alphaValue <= 255; alphaValue += 1) {\r\n          array.push(p5.color(p5.red(strokeColor), p5.green(strokeColor), p5.blue(strokeColor), p5.alpha(strokeColor) * alphaValue / 255));\r\n      }\r\n      this.strokeColorArray = array;\r\n    }\r\n    apply(p5, alphaValue = 255) {\r\n      if(colorMode) {\r\n        p5.stroke((baseHue + COLOR_CHANGE_SPEED * p5.frameCount) % 360, COLOR_SATURATION, COLOR_BRIGHTNESS, 0.05);\r\n      } else {\r\n        const index = Math.floor(p5.constrain(alphaValue, 0, 255));\r\n        p5.stroke(this.strokeColorArray[index]);\r\n      }        \r\n      p5.noFill();\r\n    }\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    //setup canvas & basics\r\n    p5.createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT).parent(canvasParentRef);\r\n    p5.noiseSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.randomSeed(SEED !== null ? SEED : p5.floor(p5.random(1, 10000)));\r\n    p5.colorMode(p5.HSB,360, 100, 100);\r\n    baseHue = p5.floor(p5.random(0,360));\r\n    p5.disableFriendlyErrors = true;\r\n    p5.frameRate(IDEAL_FRAME_RATE);\r\n    unitLength = Math.min(p5.width, p5.height) / 640;\r\n    p5.strokeWeight(Math.max(1, 1 * unitLength)); \r\n    if (darkBackgroundMode) {\r\n      p5.background(0);\r\n    } else {\r\n      p5.background(255);\r\n    }\r\n    const rorschachShapeSize = 480 * unitLength;\r\n    rorschachShape = new RorschachShape(p5, {\r\n        shapeSize: rorschachShapeSize,\r\n        vertexCount: Math.floor(1.5 * rorschachShapeSize),\r\n        noiseDistanceScale: p5.random(0.005, 0.04),\r\n        noiseMagnitudeFactor: p5.random(1, 4),\r\n        noiseTimeScale: 0.0005,\r\n    });\r\n    rorschachShape.centerPosition.set(0.5 * p5.width, 0.48 * p5.height);\r\n    rorschachShape.rotationAngle = p5.PI + p5.HALF_PI;\r\n    rorschachShapeColor = new NoFillShapeColor(p5, p5.color(0, 0.05));\r\n    p5.loop();\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    if(p5.frameCount > DURATION) {\r\n      p5.noLoop();\r\n    }\r\n    rorschachShape.step();\r\n    rorschachShapeColor.apply(p5);\r\n    rorschachShape.draw(p5);\r\n  };\r\n\r\n  const keyPressed = (p5) => {\r\n    //save the canvas when press \"s\" or space\r\n    if (p5.keyCode === 83 || p5.keyCode === 32) {\r\n      let fileName = \"SimonBuechi\" + window.location.hash;\r\n      fileName.replace(/[^a-zA-Z0-9]/g, \"\");\r\n      p5.saveCanvas(fileName, \"jpg\");\r\n    }\r\n    if(p5.key === 'p') {\r\n      colorMode = !colorMode;\r\n      p5.redraw();\r\n    }\r\n    if(p5.key === 'b') {\r\n      darkBackgroundMode = !darkBackgroundMode;\r\n      if (darkBackgroundMode) {\r\n        p5.background(0);\r\n      } else {\r\n        p5.background(255);\r\n      }\r\n      \r\n    }\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} keyPressed={keyPressed} />;\r\n};\r\n\r\nexport default Artwork;"],"sourceRoot":""}